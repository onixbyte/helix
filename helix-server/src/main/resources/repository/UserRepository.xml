<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onixbyte.helix.repository.UserRepository">
    <select id="selectByUsername" parameterType="string">
        SELECT id,
               username,
               password,
               full_name,
               email,
               country_code,
               phone_number,
               avatar_url,
               status,
               department_id,
               position_id,
               created_at,
               updated_at
        FROM users
        WHERE username = #{username}
    </select>

    <select id="selectAll" parameterType="org.springframework.data.domain.Pageable"
            resultType="user">
        SELECT id,
               username,
               password,
               full_name,
               email,
               country_code,
               phone_number,
               avatar_url,
               status,
               department_id,
               position_id,
               created_at,
               updated_at
        FROM users
        <if test="pageable != null and pageable.sort != null">
            ORDER BY
            <foreach collection="pageable.sort" item="order" separator=", ">
                ${order.property} ${order.direction}
            </foreach>
            LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}
        </if>
    </select>

    <select id="countAll" resultType="int">
        SELECT COUNT(*)
        FROM users
    </select>

    <select id="selectList" resultType="user">
        SELECT id,
               username,
               password,
               full_name,
               email,
               country_code,
               phone_number,
               avatar_url,
               status,
               department_id,
               position_id,
               created_at,
               updated_at
        FROM users
        <where>
            <if test="request != null and request.departmentId != null">
                department_id = #{request.departmentId}
            </if>
        </where>
        <if test="pageable != null and pageable.sort != null">
            ORDER BY
            <foreach collection="pageable.sort" item="order" separator=", ">
                ${order.property} ${order.direction}
            </foreach>
            LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}
        </if>
    </select>

    <select id="count" resultType="int">
        SELECT COUNT(*)
        FROM users
        <where>
            <if test="request != null and request.departmentId != null">
                department_id = #{request.departmentId}
            </if>
        </where>
    </select>

    <insert id="save" parameterType="user">
        INSERT INTO users(id, username, password, full_name, email, country_code, phone_number,
                          avatar_url, status, department_id, position_id, created_at, updated_at)
        VALUES (#{user.id}, #{user.username}, #{user.password}, #{user.fullName}, #{user.email},
                #{user.countryCode}, #{user.phoneNumber}, #{user.avatarUrl}, #{user.status},
                #{user.departmentId}, #{user.positionId}, #{user.createdAt}, #{user.updatedAt})
    </insert>

    <select id="selectById" parameterType="long" resultType="user">
        SELECT id,
               username,
               password,
               full_name,
               email,
               country_code,
               phone_number,
               avatar_url,
               status,
               department_id,
               position_id,
               created_at,
               updated_at
        FROM users
        WHERE id = #{id}
    </select>
</mapper>